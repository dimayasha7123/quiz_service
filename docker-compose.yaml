version: "3.8"
volumes:
  qs_data:
services:
  db:
    image: postgres:13.3
    restart: always
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - qs_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"
        ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s
  goose:
    build:
      context: .
      dockerfile: goose.dockerfile
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy
  qserver:
    build:
      context: .
      dockerfile: server.dockerfile
    env_file:
      - .env
    environment:
      - SOCKET_HOST=0.0.0.0
      - POSTGRES_HOST=db
    ports:
      - "${SOCKET_GRPC_PORT}:${SOCKET_GRPC_PORT}"
      - "${SOCKET_HTTP_PORT}:${SOCKET_HTTP_PORT}"
    restart: always
    depends_on:
      db:
        condition: service_healthy
      goose:
        condition: service_completed_successfully
